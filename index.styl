$base-font-size ?= .75em
$base-line-height ?= 1.625em
$browser-font-size ?= 16px
$browser-supports-rems ?= true
$minimum-line-padding ?= .25rem

can-normalize-font-size(font-size = default-font-size(), parent-font-size = default-parent-font-size(), root = false)
  if parent-font-size
    return false unless can-normalize-font-size(parent-font-size, null, root)

  return false if typeof(font-size) != 'unit'
  u = unit(font-size)
  return true if (u == '%')
  return true if (u == 'cm')
  return true if (u == 'em')
  return true if (u == 'in')
  return true if (u == 'pc')
  return true if (u == 'pt')
  return true if (u == 'px')
  return true if (u == 'rem')
  return false

default-font-size()
  return @font-size ? @font-size : 1em

default-parent-font-size()
  return @parent-font-size

lines-in-font-size(font-size = default-font-size(), parent-font-size = default-parent-font-size(), root = false)
  font-size = normalize-font-size(font-size, parent-font-size, root)
  base-line-height = normalize-font-size($base-line-height)
  min-padding = 2 * normalize-font-size($minimum-line-padding)
  lines = ceil(font-size / base-line-height)
  lines = lines + 1 if (lines * base-line-height - font-size < min-padding)
  return lines

normalize-font-size(font-size, parent-font-size = null, root = false)
  u = unit(font-size)
  val = unit(font-size, '')

  return val if (u == '') // the font size is already normalized

  unless unit($browser-font-size) == 'px'
    error('browser font size must be specified in pixels')

  if (root) && (u == 'rem')
    error('cannot specify font size in rems on the root')

  if (parent-font-size) && (u == '%')
    u = unit(parent-font-size)
    val *= unit(parent-font-size / 100, '')
  else if (parent-font-size) && (u == 'em')
    u = unit(parent-font-size)
    val *= unit(parent-font-size, '')
  else if (u == 'in')
    u = 'px'
    val *= 96
  else if (u == 'cm')
    u = 'px'
    val *= 37.8
  else if (u == 'mm')
    u = 'px'
    val *= 3.78
  else if (u == 'pt')
    u = 'px'
    val *= 96/72
  else if (u == 'pc')
    u = 'px'
    val *= 16

  unless root
    if (u == '%')
      u = unit($base-font-size)
      val *= $base-font-size / 100
    else if (u == 'em') || (u == 'rem')
      u = unit($base-font-size)
      val *= unit($base-font-size, '')

  if (u == '%')
    return val * unit($browser-font-size, '') / 100
  else if (u == 'em') || (u == 'rem')
    return val * unit($browser-font-size, '')
  else if (u == 'px')
    return val

rym(length, font-size = default-font-size(), parent-font-size = default-parent-font-size(), root = false)
  if ($browser-supports-rems)
    return unit(length * normalize-font-size($base-line-height) / normalize-font-size($base-font-size, null, true), 'rem')

  unless can-normalize-font-size(font-size, parent-font-size)
    msg = 'cannot compute vertical rhythm for font-size "%s" and parent-font-size "%s"'
    warn('' + s(msg, font-size, parent-font-size))
    return

  return unit(length * normalize-font-size($base-line-height) / normalize-font-size(font-size, parent-font-size, root), 'em')

rym-property(name, n)
  n = unit-to-rym(n)
  add-property(name, n) if n

unit-to-rym(n)
  return (unit(n) ? n : rym(n)) if typeof(n) == 'unit'
  return n

font-size(font-size, parent-font-size = default-parent-font-size(), root = false)
  font-size font-size
  unless @line-height
    line-height 1 font-size parent-font-size root

line-height(height, font-size = default-font-size(), parent-font-size = default-parent-font-size(), root = false)
  can-normalize = true

  unless can-normalize-font-size(font-size, parent-font-size)
    msg = 'cannot compute vertical rhythm for font-size "%s" and parent-font-size "%s"'
    warn('' + s(msg, font-size, parent-font-size))
    can-normalize = false

  if (can-normalize)
    if typeof(arguments) != 'unit'
      line-height arguments
    else if unit(arguments) == ''
      lines = arguments * lines-in-font-size(font-size, parent-font-size, root)
      line-height rym(lines, font-size, parent-font-size, root)
    else
      line-height arguments

parent-font-size()
  return null // do not render this parameter

margin()
  for i in 0...length(arguments)
    if typeof(arguments[i]) == 'unit'
      unless unit(arguments[i])
        val = rym(arguments[i])
        arguments[i] = val if val
  margin arguments

margin-bottom(n)
  rym-property(margin-top, n)

margin-left(n)
  rym-property(margin-left, n)

margin-right(n)
  rym-property(margin-right, n)

margin-top(n)
  rym-property(margin-top, n)

padding()
  for i in 0...length(arguments)
    if typeof(arguments[i]) == 'unit'
      unless unit(arguments[i])
        val = rym(arguments[i])
        arguments[i] = val if val
  padding arguments

padding-bottom(n)
  rym-property(padding-bottom, n)

padding-left(n)
  rym-property(padding-left, n)

padding-right(n)
  rym-property(padding-right, n)

padding-top(n)
  rym-property(padding-top, n)

html
  font-size($base-font-size, null, true)